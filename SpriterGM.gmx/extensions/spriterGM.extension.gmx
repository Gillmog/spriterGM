<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>spriterGM</name>
  <version>1.1.0</version>
  <packageID>com.vitaliyzhygotsky.spritergm</packageID>
  <ProductID></ProductID>
  <date>10/11/16</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <androidProps>-1</androidProps>
  <iosProps>0</iosProps>
  <installdir></installdir>
  <classname></classname>
  <androidclassname>spriterGM</androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject>compile project(':libspritergm')</gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <androidPermissions>
    <Permission>android.permission.READ_EXTERNAL_STORAGE</Permission>
  </androidPermissions>
  <IncludedResources>
    <Resource>Scripts\spriterGM\spriter_load</Resource>
    <Resource>Scripts\spriterGM\spriter_update</Resource>
    <Resource>Scripts\spriterGM\spriter_render</Resource>
    <Resource>Scripts\spriterGM\spriter_set_current_animation</Resource>
    <Resource>Scripts\spriterGM\spriter_apply_character_map</Resource>
    <Resource>Scripts\spriterGM\spriter_remove_character_map</Resource>
    <Resource>Scripts\spriterGM\spriter_remove_all_character_map</Resource>
    <Resource>Scripts\spriterGM\spriter_set_playback_speed_ratio</Resource>
    <Resource>Scripts\spriterGM\spriter_start_resume_playback</Resource>
    <Resource>Scripts\spriterGM\spriter_pause_playback</Resource>
    <Resource>Scripts\spriterGM\spriter_set_time_ratio</Resource>
    <Resource>Scripts\spriterGM\spriter_animation_just_finished</Resource>
    <Resource>Scripts\spriterGM\spriter_check_errors</Resource>
    <Resource>Scripts\spriterGM\spriter_is_trigger</Resource>
    <Resource>Scripts\spriterGM\point\spriter_get_point_y1</Resource>
    <Resource>Scripts\spriterGM\point\spriter_get_point_y2</Resource>
    <Resource>Scripts\spriterGM\point\spriter_get_point_x1</Resource>
    <Resource>Scripts\spriterGM\point\spriter_get_point_x2</Resource>
    <Resource>Scripts\spriterGM\point\spriter_get_point_direction</Resource>
    <Resource>Scripts\spriterGM\box\spriter_get_box_point_x</Resource>
    <Resource>Scripts\spriterGM\box\spriter_get_box_point_y</Resource>
    <Resource>Scripts\spriterGM\box\spriter_get_box_collision_rectangle</Resource>
    <Resource>Scripts\spriterGM\spriter_destroy_instance</Resource>
    <Resource>Scripts\spriterGM\spriter_find_object</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_set_IK_mode</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_is_IK_mode</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_is_manual_control</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_set_manual_control</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_set_IK_position</Resource>
    <Resource>Scripts\spriterGM\IK\spriter_set_manual_angle</Resource>
  </IncludedResources>
  <files>
    <file>
      <filename>spriterGM.dll</filename>
      <origname>extensions\spriterGM.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>17592187093056</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>spriter_LoadModel</name>
          <externalName>spriter_LoadModel</externalName>
          <kind>12</kind>
          <help>double spriter_LoadModel(const char *pFile)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_CreateInstance</name>
          <externalName>spriter_CreateInstance</externalName>
          <kind>12</kind>
          <help>double spriter_CreateInstance(double ModelIndex, const char *pInstanceName)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetModelEnableBones</name>
          <externalName>spriter_SetModelEnableBones</externalName>
          <kind>12</kind>
          <help>double spriter_SetModelEnableBones(double ModelIndex, double bEnable);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoCount</name>
          <externalName>spriter_GetObjectInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoFileName</name>
          <externalName>spriter_GetObjectInfoFileName</externalName>
          <kind>12</kind>
          <help>const char *spriter_GetObjectInfoFileName(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoString</name>
          <externalName>spriter_GetObjectInfoString</externalName>
          <kind>12</kind>
          <help>const char *spriter_GetObjectInfoString(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPositionX</name>
          <externalName>spriter_GetObjectInfoPositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPositionX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPositionY</name>
          <externalName>spriter_GetObjectInfoPositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPositionY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPivotX</name>
          <externalName>spriter_GetObjectInfoPivotX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPivotX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPivotY</name>
          <externalName>spriter_GetObjectInfoPivotY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPivotY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSizeX</name>
          <externalName>spriter_GetObjectInfoSizeX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSizeX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSizeY</name>
          <externalName>spriter_GetObjectInfoSizeY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSizeY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoScaleX</name>
          <externalName>spriter_GetObjectInfoScaleX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoScaleX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoScaleY</name>
          <externalName>spriter_GetObjectInfoScaleY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoScaleY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoAngle</name>
          <externalName>spriter_GetObjectInfoAngle</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoAngle(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsGetObjectInfoRender</name>
          <externalName>spriter_IsGetObjectInfoRender</externalName>
          <kind>12</kind>
          <help>double spriter_IsGetObjectInfoRender(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoGMRenderPositionX</name>
          <externalName>spriter_GetObjectInfoGMRenderPositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoGMRenderPositionX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoGMRenderPositionY</name>
          <externalName>spriter_GetObjectInfoGMRenderPositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoGMRenderPositionY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceCurrentAnimation</name>
          <externalName>spriter_SetInstanceCurrentAnimation</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceCurrentAnimation(double ModelIndex, double InstanceIndex, const char *pAnimationName, double BlendTime)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstancePosition</name>
          <externalName>spriter_SetInstancePosition</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstancePosition(double ModelIndex, double InstanceIndex, double px, double py)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceScale</name>
          <externalName>spriter_SetInstanceScale</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceScale(double ModelIndex, double InstanceIndex, double sx, double sy)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceAngle</name>
          <externalName>spriter_SetInstanceAngle</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceAngle(double ModelIndex, double InstanceIndex, double angle)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetInstancePositionX</name>
          <externalName>spriter_GetInstancePositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetInstancePositionX(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetInstancePositionY</name>
          <externalName>spriter_GetInstancePositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetInstancePositionY(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_ApplyInstanceCharacterMap</name>
          <externalName>spriter_ApplyInstanceCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_ApplyInstanceCharacterMap(double ModelIndex, double InstanceIndex, const char *charMap)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_UpdateInstance</name>
          <externalName>spriter_UpdateInstance</externalName>
          <kind>12</kind>
          <help>void spriter_UpdateInstance(double ModelIndex, double InstanceIndex, double TimeElapsed)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_RemoveInstanceCharacterMap</name>
          <externalName>spriter_RemoveInstanceCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_RemoveInstanceCharacterMap(double ModelIndex, double InstanceIndex, const char *charMap)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_RemoveInstanceAllCharacterMap</name>
          <externalName>spriter_RemoveInstanceAllCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_RemoveInstanceAllCharacterMap(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstancePlaybackSpeedRatio</name>
          <externalName>spriter_SetInstancePlaybackSpeedRatio</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstancePlaybackSpeedRatio(double ModelIndex, double InstanceIndex, double PlaybackSpeedRatio)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceStartResumePlayback</name>
          <externalName>spriter_InstanceStartResumePlayback</externalName>
          <kind>12</kind>
          <help>void spriter_InstanceStartResumePlayback(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstancePausePlayback</name>
          <externalName>spriter_InstancePausePlayback</externalName>
          <kind>12</kind>
          <help>void spriter_InstancePausePlayback(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceSetTimeRatio</name>
          <externalName>spriter_InstanceSetTimeRatio</externalName>
          <kind>12</kind>
          <help>void spriter_InstanceSetTimeRatio(double ModelIndex, double InstanceIndex, double TimeRatio)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceAnimationJustFinished</name>
          <externalName>spriter_InstanceAnimationJustFinished</externalName>
          <kind>12</kind>
          <help>bool spriter_InstanceAnimationJustFinished(double ModelIndex, double InstanceIndex, double bLooped)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetTriggerInfoCount</name>
          <externalName>spriter_InstanceGetTriggerInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_InstanceGetTriggerInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetTriggerInfoName</name>
          <externalName>spriter_InstanceGetTriggerInfoName</externalName>
          <kind>12</kind>
          <help>const char* spriter_InstanceGetTriggerInfoName(double ModelIndex, double InstanceIndex, double TriggerIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetSoundInfoCount</name>
          <externalName>spriter_InstanceGetSoundInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_InstanceGetSoundInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetSoundInfoName</name>
          <externalName>spriter_InstanceGetSoundInfoName</externalName>
          <kind>12</kind>
          <help>const char* spriter_InstanceGetSoundInfoName(double ModelIndex, double InstanceIndex, double SoundIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoAlpha</name>
          <externalName>spriter_GetObjectInfoAlpha</externalName>
          <kind>11</kind>
          <help>double spriter_GetObjectInfoAlpha(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoType</name>
          <externalName>spriter_GetObjectInfoType</externalName>
          <kind>11</kind>
          <help>double spriter_GetObjectInfoType(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetErrorsCount</name>
          <externalName>spriter_GetErrorsCount</externalName>
          <kind>12</kind>
          <help>double spriter_GetErrorsCount()</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_GetLastError</name>
          <externalName>spriter_GetLastError</externalName>
          <kind>12</kind>
          <help>const char* spriter_GetLastError()</help>
          <returnType>1</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_ForceGarbageCollection</name>
          <externalName>spriter_ForceGarbageCollection</externalName>
          <kind>12</kind>
          <help>void spriter_ForceGarbageCollection()</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_AddLoadedSprite</name>
          <externalName>spriter_AddLoadedSprite</externalName>
          <kind>12</kind>
          <help>double spriter_AddLoadedSprite(double ModelIndex, const char *pSpriteName, double SpritePtr);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_FindLoadedSprite</name>
          <externalName>spriter_FindLoadedSprite</externalName>
          <kind>12</kind>
          <help>double spriter_FindLoadedSprite(double ModelIndex, const char *pSpriteName);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetNumSprites</name>
          <externalName>spriter_GetNumSprites</externalName>
          <kind>12</kind>
          <help>double spriter_GetNumSprites(double ModelIndex);</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetSprite</name>
          <externalName>spriter_GetSprite</externalName>
          <kind>12</kind>
          <help>const char* spriter_GetSprite(double ModelIndex, double SpriteIndex);</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSpriteIndex</name>
          <externalName>spriter_GetObjectInfoSpriteIndex</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSpriteIndex(double ModelIndex, double InstanceIndex, double ObjectInfoIndex);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLoadedSpriteTexelSize</name>
          <externalName>spriter_SetLoadedSpriteTexelSize</externalName>
          <kind>11</kind>
          <help>double spriter_SetLoadedSpriteTexelSize(double ModelIndex, const char *pSpriteName, double TexelWidth, double TexelHeight);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLoadedSpriteSize</name>
          <externalName>spriter_SetLoadedSpriteSize</externalName>
          <kind>11</kind>
          <help>double spriter_SetLoadedSpriteSize(double ModelIndex, const char *pSpriteName, double TextureWidth, double TextureHeight);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshPointX</name>
          <externalName>spriter_GetObjectInfoMeshPointX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshPointX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshPointY</name>
          <externalName>spriter_GetObjectInfoMeshPointY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshPointY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshUVX</name>
          <externalName>spriter_GetObjectInfoMeshUVX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshUVX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshUVY</name>
          <externalName>spriter_GetObjectInfoMeshUVY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshUVY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyInstance</name>
          <externalName>spriter_DestroyInstance</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyInstance(double ModelIndex, double InstanceIndex);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyModel</name>
          <externalName>spriter_DestroyModel</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyModel(double ModelIndex);</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyAllModels</name>
          <externalName>spriter_DestroyAllModels</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyAllModels();</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_GetObjectInfoName</name>
          <externalName>spriter_GetObjectInfoName</externalName>
          <kind>12</kind>
          <help>const char* spriter_GetObjectInfoName(double ModelIndex, double InstanceIndex, double ObjectInfoIndex);</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLockObjectInstance</name>
          <externalName>spriter_SetLockObjectInstance</externalName>
          <kind>12</kind>
          <help>double spriter_SetLockObjectInstance(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetUnlockObjectInstance</name>
          <externalName>spriter_SetUnlockObjectInstance</externalName>
          <kind>12</kind>
          <help>double spriter_SetUnlockObjectInstance(double ModelIndex, double InstanceIndex);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceIKMode</name>
          <externalName>spriter_SetObjectInstanceIKMode</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceIKMode(double ModelIndex, double InstanceIndex, double bIKMode, double IKTreshold);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceIKPosition</name>
          <externalName>spriter_SetObjectInstanceIKPosition</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceIKPosition(double ModelIndex, double InstanceIndex, double x, double y);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceManualAngleControl</name>
          <externalName>spriter_SetObjectInstanceManualAngleControl</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceManualAngleControl(double ModelIndex, double InstanceIndex, const char *ObjectName, double bManualControl);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceManualAngle</name>
          <externalName>spriter_SetObjectInstanceManualAngle</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceManualAngle(double ModelIndex, double InstanceIndex, double x, double y);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsObjectInstanceIKMode</name>
          <externalName>spriter_IsObjectInstanceIKMode</externalName>
          <kind>12</kind>
          <help>double spriter_IsObjectInstanceIKMode(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsObjectInstanceManualAngleControl</name>
          <externalName>spriter_IsObjectInstanceManualAngleControl</externalName>
          <kind>12</kind>
          <help>double spriter_IsObjectInstanceManualAngleControl(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>spriterGM.ext</filename>
      <origname>extensions\spriterGM.ext</origname>
      <init></init>
      <final></final>
      <kind>4</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>2097160</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>spriter_LoadModel</name>
          <externalName>spriter_LoadModel</externalName>
          <kind>12</kind>
          <help>double spriter_LoadModel(const char *pFile)</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_CreateInstance</name>
          <externalName>spriter_CreateInstance</externalName>
          <kind>12</kind>
          <help>double spriter_CreateInstance(double ModelIndex, const char *pInstanceName)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoCount</name>
          <externalName>spriter_GetObjectInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoFileName</name>
          <externalName>spriter_GetObjectInfoFileName</externalName>
          <kind>12</kind>
          <help>const char *spriter_GetObjectInfoFileName(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoString</name>
          <externalName>spriter_GetObjectInfoString</externalName>
          <kind>12</kind>
          <help>const char *spriter_GetObjectInfoString(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPositionX</name>
          <externalName>spriter_GetObjectInfoPositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPositionX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPositionY</name>
          <externalName>spriter_GetObjectInfoPositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPositionY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPivotX</name>
          <externalName>spriter_GetObjectInfoPivotX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPivotX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoPivotY</name>
          <externalName>spriter_GetObjectInfoPivotY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoPivotY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSizeX</name>
          <externalName>spriter_GetObjectInfoSizeX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSizeX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSizeY</name>
          <externalName>spriter_GetObjectInfoSizeY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSizeY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoScaleX</name>
          <externalName>spriter_GetObjectInfoScaleX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoScaleX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoScaleY</name>
          <externalName>spriter_GetObjectInfoScaleY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoScaleY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoAngle</name>
          <externalName>spriter_GetObjectInfoAngle</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoAngle(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsGetObjectInfoRender</name>
          <externalName>spriter_IsGetObjectInfoRender</externalName>
          <kind>12</kind>
          <help>double spriter_IsGetObjectInfoRender(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoGMRenderPositionX</name>
          <externalName>spriter_GetObjectInfoGMRenderPositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoGMRenderPositionX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoGMRenderPositionY</name>
          <externalName>spriter_GetObjectInfoGMRenderPositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoGMRenderPositionY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceCurrentAnimation</name>
          <externalName>spriter_SetInstanceCurrentAnimation</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceCurrentAnimation(double ModelIndex, double InstanceIndex, const char *pAnimationName, double BlendTime)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstancePosition</name>
          <externalName>spriter_SetInstancePosition</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstancePosition(double ModelIndex, double InstanceIndex, double px, double py)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceScale</name>
          <externalName>spriter_SetInstanceScale</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceScale(double ModelIndex, double InstanceIndex, double sx, double sy)</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstanceAngle</name>
          <externalName>spriter_SetInstanceAngle</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstanceAngle(double ModelIndex, double InstanceIndex, double angle)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetInstancePositionX</name>
          <externalName>spriter_GetInstancePositionX</externalName>
          <kind>12</kind>
          <help>double spriter_GetInstancePositionX(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetInstancePositionY</name>
          <externalName>spriter_GetInstancePositionY</externalName>
          <kind>12</kind>
          <help>double spriter_GetInstancePositionY(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_ApplyInstanceCharacterMap</name>
          <externalName>spriter_ApplyInstanceCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_ApplyInstanceCharacterMap(double ModelIndex, double InstanceIndex, const char *charMap)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_UpdateInstance</name>
          <externalName>spriter_UpdateInstance</externalName>
          <kind>12</kind>
          <help>void spriter_UpdateInstance(double ModelIndex, double InstanceIndex, double TimeElapsed)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_RemoveInstanceCharacterMap</name>
          <externalName>spriter_RemoveInstanceCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_RemoveInstanceCharacterMap(double ModelIndex, double InstanceIndex, const char *charMap)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_RemoveInstanceAllCharacterMap</name>
          <externalName>spriter_RemoveInstanceAllCharacterMap</externalName>
          <kind>12</kind>
          <help>void spriter_RemoveInstanceAllCharacterMap(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetInstancePlaybackSpeedRatio</name>
          <externalName>spriter_SetInstancePlaybackSpeedRatio</externalName>
          <kind>12</kind>
          <help>void spriter_SetInstancePlaybackSpeedRatio(double ModelIndex, double InstanceIndex, double PlaybackSpeedRatio)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceStartResumePlayback</name>
          <externalName>spriter_InstanceStartResumePlayback</externalName>
          <kind>12</kind>
          <help>void spriter_InstanceStartResumePlayback(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstancePausePlayback</name>
          <externalName>spriter_InstancePausePlayback</externalName>
          <kind>12</kind>
          <help>void spriter_InstancePausePlayback(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceSetTimeRatio</name>
          <externalName>spriter_InstanceSetTimeRatio</externalName>
          <kind>12</kind>
          <help>void spriter_InstanceSetTimeRatio(double ModelIndex, double InstanceIndex, double TimeRatio)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceAnimationJustFinished</name>
          <externalName>spriter_InstanceAnimationJustFinished</externalName>
          <kind>12</kind>
          <help>bool spriter_InstanceAnimationJustFinished(double ModelIndex, double InstanceIndex, double bLooped)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetTriggerInfoCount</name>
          <externalName>spriter_InstanceGetTriggerInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_InstanceGetTriggerInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetTriggerInfoName</name>
          <externalName>spriter_InstanceGetTriggerInfoName</externalName>
          <kind>12</kind>
          <help>const char* spriter_InstanceGetTriggerInfoName(double ModelIndex, double InstanceIndex, double TriggerIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetSoundInfoCount</name>
          <externalName>spriter_InstanceGetSoundInfoCount</externalName>
          <kind>12</kind>
          <help>double spriter_InstanceGetSoundInfoCount(double ModelIndex, double InstanceIndex)</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_InstanceGetSoundInfoName</name>
          <externalName>spriter_InstanceGetSoundInfoName</externalName>
          <kind>12</kind>
          <help>const char* spriter_InstanceGetSoundInfoName(double ModelIndex, double InstanceIndex, double SoundIndex)</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoAlpha</name>
          <externalName>spriter_GetObjectInfoAlpha</externalName>
          <kind>11</kind>
          <help>double spriter_GetObjectInfoAlpha(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoType</name>
          <externalName>spriter_GetObjectInfoType</externalName>
          <kind>11</kind>
          <help>double spriter_GetObjectInfoType(double ModelIndex, double InstanceIndex, double ObjectInfoIndex)</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetErrorsCount</name>
          <externalName>spriter_GetErrorsCount</externalName>
          <kind>12</kind>
          <help>double spriter_GetErrorsCount()</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_GetLastError</name>
          <externalName>spriter_GetLastError</externalName>
          <kind>12</kind>
          <help>const char* spriter_GetLastError()</help>
          <returnType>1</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_ForceGarbageCollection</name>
          <externalName>spriter_ForceGarbageCollection</externalName>
          <kind>12</kind>
          <help>void spriter_ForceGarbageCollection()</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_AddLoadedSprite</name>
          <externalName>spriter_AddLoadedSprite</externalName>
          <kind>12</kind>
          <help>double spriter_AddLoadedSprite(double ModelIndex, const char *pSpriteName, double SpritePtr);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_FindLoadedSprite</name>
          <externalName>spriter_FindLoadedSprite</externalName>
          <kind>12</kind>
          <help>double spriter_FindLoadedSprite(double ModelIndex, const char *pSpriteName);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetNumSprites</name>
          <externalName>spriter_GetNumSprites</externalName>
          <kind>12</kind>
          <help>double spriter_GetNumSprites(double ModelIndex);</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetSprite</name>
          <externalName>spriter_GetSprite</externalName>
          <kind>12</kind>
          <help>const char* spriter_GetSprite(double ModelIndex, double SpriteIndex);</help>
          <returnType>1</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoSpriteIndex</name>
          <externalName>spriter_GetObjectInfoSpriteIndex</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoSpriteIndex(double ModelIndex, double InstanceIndex, double ObjectInfoIndex);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLoadedSpriteTexelSize</name>
          <externalName>spriter_SetLoadedSpriteTexelSize</externalName>
          <kind>11</kind>
          <help>double spriter_SetLoadedSpriteTexelSize(double ModelIndex, const char *pSpriteName, double TexelWidth, double TexelHeight);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLoadedSpriteSize</name>
          <externalName>spriter_SetLoadedSpriteSize</externalName>
          <kind>11</kind>
          <help>double spriter_SetLoadedSpriteSize(double ModelIndex, const char *pSpriteName, double TextureWidth, double TextureHeight);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshPointX</name>
          <externalName>spriter_GetObjectInfoMeshPointX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshPointX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshPointY</name>
          <externalName>spriter_GetObjectInfoMeshPointY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshPointY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshUVX</name>
          <externalName>spriter_GetObjectInfoMeshUVX</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshUVX(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_GetObjectInfoMeshUVY</name>
          <externalName>spriter_GetObjectInfoMeshUVY</externalName>
          <kind>12</kind>
          <help>double spriter_GetObjectInfoMeshUVY(double ModelIndex, double InstanceIndex, double ObjectInfoIndex, double PointIndex);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyInstance</name>
          <externalName>spriter_DestroyInstance</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyInstance(double ModelIndex, double InstanceIndex);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyModel</name>
          <externalName>spriter_DestroyModel</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyModel(double ModelIndex);</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_DestroyAllModels</name>
          <externalName>spriter_DestroyAllModels</externalName>
          <kind>12</kind>
          <help>double spriter_DestroyAllModels();</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>spriter_GetObjectInfoName</name>
          <externalName>spriter_GetObjectInfoName</externalName>
          <kind>12</kind>
          <help>spriter_GetObjectInfoName(double ModelIndex, double InstanceIndex, double ObjectInfoIndex);</help>
          <returnType>1</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetLockObjectInstance</name>
          <externalName>spriter_SetLockObjectInstance</externalName>
          <kind>12</kind>
          <help>double spriter_SetLockObjectInstance(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetUnlockObjectInstance</name>
          <externalName>spriter_SetUnlockObjectInstance</externalName>
          <kind>12</kind>
          <help>double spriter_SetUnlockObjectInstance(double ModelIndex, double InstanceIndex);</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceIKMode</name>
          <externalName>spriter_SetObjectInstanceIKMode</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceIKMode(double ModelIndex, double InstanceIndex, double bIKMode, double IKTreshold);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceIKPosition</name>
          <externalName>spriter_SetObjectInstanceIKPosition</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceIKPosition(double ModelIndex, double InstanceIndex, double x, double y);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceManualAngleControl</name>
          <externalName>spriter_SetObjectInstanceManualAngleControl</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceManualAngleControl(double ModelIndex, double InstanceIndex, const char *ObjectName, double bManualControl);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_SetObjectInstanceManualAngle</name>
          <externalName>spriter_SetObjectInstanceManualAngle</externalName>
          <kind>12</kind>
          <help>double spriter_SetObjectInstanceManualAngle(double ModelIndex, double InstanceIndex, double x, double y);</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsObjectInstanceIKMode</name>
          <externalName>IsObjectInstanceIKMode</externalName>
          <kind>12</kind>
          <help>double spriter_IsObjectInstanceIKMode(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>spriter_IsObjectInstanceManualAngleControl</name>
          <externalName>spriter_IsObjectInstanceManualAngleControl</externalName>
          <kind>12</kind>
          <help>double spriter_IsObjectInstanceManualAngleControl(double ModelIndex, double InstanceIndex, const char *ObjectName);</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
